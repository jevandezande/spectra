[tool.poetry]
name = "Spectra"
version = "0.7.0"
description = "A package for plotting and manipulating 1D spectra"
authors = ["Jonathon Vandezande"]
keywords = ["chemistry", "plotting", "spectra"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/jevandezande/spectra"

[tool.poetry.dependencies]
python = "^3.12"
lmfit = "*"
matplotlib = "*"
natsort = "*"
numpy = ">=2.0"
scipy = "*"

[tool.poetry.group.dev.dependencies]
mypy = ">=1.10"
pre-commit = "*"
ruff = ">=0.5"

[tool.poetry.group.test.dependencies]
pytest = "*"
pytest-cov = "*"

[tool.poetry.scripts]
correlate = "spectra.scripts.correlate_spectra:main"
plot_spectra = "spectra.scripts.plot_spectra:main"

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = [
    "B",  # bugbear
    "D",  # pydocstyle
    "E",  # pycodestyle errors
    "F",  # pyflakes
    "I",  # isort
    "N",  # pep8-naming conventions
    "W",  # pycodestyle warnings
    "C4", # comprehensions
    "PL", # pylint
    "PT", # flake8-pytest-style
    "PIE", # misc lints
    "PYI", # flake8-pyi
    "TID", # tidy imports
    "TCH", # type-checking imports
    "RUF", # Ruff-specific rules
    "RSE", # flake8-raise
    "ICN001", # unconventional-import-alias
]
ignore = [
    "D100", # Missing docstring in public module
    "D103", # Missing docstring in public function
    "N802", # Function name should be lowercase
    "N803", # Argument name should be lowercase
    "N806", # Non-lowercase variable in function
    "PT013",  # Incorrect pytest import
    "PLR2004",  # Magic value comparison
    "PLR0911", # Too many returns
    "PLR0912", # Too many branches
    "PLR0913", # Too many arguments to function call
    "PLR0914", # Too many locals
    "PLR0915", # Too many statements
    "PLR1702", # Too many nested-blocks
    "PLW2901", # Redifined loop name
    "E731",    # Lambda assignment

    # To be removed
    "PT011",  # Pytest raises too broad
    "RUF001",  # Ambiguous unicode character string
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["D104", "F401", "F403"]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.mypy]
files = ["spectra", "tests"]
ignore_missing_imports = true
pretty = true

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "--doctest-modules"
doctest_optionflags = "NORMALIZE_WHITESPACE"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
